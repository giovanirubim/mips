import * as AtomicComponent from '/js/atomic-components.js';
import * as WordHandler from '/js/word-handlers.js';
import { Circuit } from '/js/circuit.js';
import { ComposedComponent } from '/js/component.js';

for (let name in AtomicComponent) {
	window[name] = AtomicComponent[name];
}
for (let name in WordHandler) {
	window[name] = WordHandler[name];
}

export class BitAdder extends ComposedComponent {
	constructor() {
		super();
		const circuit = new Circuit();
		const inputLayer = [];
		const nonInput = [];
		this.circuit = circuit;
		this.inputLayer = inputLayer;
		this.nonInput = nonInput;
		this.label = "bit-adder";
		const _1 = circuit.createIOPoint('output', -100, 220);
		_1.label = "c-out";
		_1.labelProp.align = "right";
		_1.labelProp.baseline = "top";
		_1.labelProp.dx = -0.25;
		_1.labelProp.dy = 0.25;
		const _2 = circuit.createIOPoint('output', 160, -40);
		_2.label = "out";
		_2.labelProp.align = "left";
		_2.labelProp.baseline = "bottom";
		_2.labelProp.dx = 0.25;
		_2.labelProp.dy = -0.25;
		const _3 = circuit.createIOPoint('input', -100, -140);
		_3.label = "c-in";
		_3.labelProp.align = "right";
		_3.labelProp.baseline = "bottom";
		_3.labelProp.dx = -0.25;
		_3.labelProp.dy = -0.25;
		const _4 = circuit.createIOPoint('input', -160, -60);
		_4.label = "B";
		_4.labelProp.align = "right";
		_4.labelProp.baseline = "bottom";
		_4.labelProp.dx = -0.25;
		_4.labelProp.dy = -0.25;
		const _5 = circuit.createIOPoint('input', -160, 60);
		_5.label = "A";
		_5.labelProp.align = "right";
		_5.labelProp.baseline = "bottom";
		_5.labelProp.dx = -0.25;
		_5.labelProp.dy = -0.25;
		const _6 = circuit.createPoint(40, -80);
		const _7 = circuit.createPoint(-120, 40);
		const _8 = circuit.createPoint(-80, 40);
		const _9 = circuit.createPoint(-80, 100);
		const _a = circuit.createPoint(40, 120);
		const _b = circuit.createPoint(40, -60);
		const _c = circuit.createPoint(-100, -60);
		const _d = circuit.createPoint(0, -20);
		const _e = circuit.createPoint(0, 60);
		const _f = circuit.createPoint(-60, -100);
		const _10 = circuit.createPoint(-100, -100);
		const _11 = new OrGate();
		circuit.add(_11);
		_11.transform.set(0, 1, -1, 0, -100, 140);
		nonInput.push(_11);
		const _12 = new AndGate();
		circuit.add(_12);
		_12.transform.set(-1, 0, 0, -1, -20, 100);
		inputLayer.push(_12);
		const _13 = new XorGate();
		circuit.add(_13);
		_13.transform.set(1, 0, 0, 1, 80, -40);
		inputLayer.push(_13);
		const _14 = new AndGate();
		circuit.add(_14);
		_14.transform.set(0, 1, -1, 0, -80, -20);
		inputLayer.push(_14);
		const _15 = new XorGate();
		circuit.add(_15);
		_15.transform.set(1, 0, 0, 1, -20, -80);
		inputLayer.push(_15);
		circuit.createWire(_1, _11.outerPoints[2]);
		circuit.createWire(_6, _15.outerPoints[2]);
		circuit.createWire(_b, _6);
		circuit.createWire(_7, _11.outerPoints[1]);
		circuit.createWire(_8, _7);
		circuit.createWire(_14.outerPoints[2], _8);
		circuit.createWire(_9, _12.outerPoints[2]);
		circuit.createWire(_11.outerPoints[0], _9);
		circuit.createWire(_a, _12.outerPoints[0]);
		circuit.createWire(_b, _a);
		circuit.createWire(_12.outerPoints[1], _e);
		circuit.createWire(_13.outerPoints[0], _b);
		circuit.createWire(_c, _14.outerPoints[1]);
		circuit.createWire(_c, _15.outerPoints[1]);
		circuit.createWire(_4, _c);
		circuit.createWire(_13.outerPoints[2], _2);
		circuit.createWire(_d, _13.outerPoints[1]);
		circuit.createWire(_e, _d);
		circuit.createWire(_5, _e);
		circuit.createWire(_f, _14.outerPoints[0]);
		circuit.createWire(_f, _10);
		circuit.createWire(_15.outerPoints[0], _f);
		circuit.createWire(_10, _3);
		const _16 = this.addIO(0, -20, 'input');
		circuit.createHiddenWire(_16, _3)
		const _17 = this.addIO(20, 0, 'output');
		circuit.createHiddenWire(_17, _2)
		const _18 = this.addIO(0, 40, 'output');
		circuit.createHiddenWire(_18, _1)
		const _19 = this.addIO(-20, 0, 'input');
		circuit.createHiddenWire(_19, _4)
		const _1a = this.addIO(-20, 20, 'input');
		circuit.createHiddenWire(_1a, _5)
		this.hitbox = [-14, -14, 14, 34];
	}
}
export class WordAdder extends ComposedComponent {
	constructor() {
		super();
		const circuit = new Circuit();
		const inputLayer = [];
		const nonInput = [];
		this.circuit = circuit;
		this.inputLayer = inputLayer;
		this.nonInput = nonInput;
		this.label = "adder-32";
		const _1 = circuit.createIOPoint('output', 0, 3180);
		const _2 = circuit.createIOPoint('input', 0, -700);
		const _3 = circuit.createIOPoint('input', -1960, 1260);
		const _4 = circuit.createIOPoint('input', -1960, 1180);
		const _5 = circuit.createIOPoint('output', 920, 1220);
		const _6 = circuit.createPoint(840, 1220);
		const _7 = circuit.createPoint(840, -340);
		const _8 = circuit.createPoint(-1820, 1260);
		const _9 = circuit.createPoint(-1820, 1180);
		const _a = circuit.createPoint(-1820, 2780);
		const _b = circuit.createPoint(-1820, -340);
		const _c = circuit.createPoint(40, -640);
		const _d = circuit.createPoint(60, -620);
		const _e = circuit.createPoint(80, -600);
		const _f = circuit.createPoint(100, -580);
		const _10 = circuit.createPoint(120, -560);
		const _11 = circuit.createPoint(140, -540);
		const _12 = circuit.createPoint(160, -520);
		const _13 = circuit.createPoint(180, -500);
		const _14 = circuit.createPoint(200, -480);
		const _15 = circuit.createPoint(220, -460);
		const _16 = circuit.createPoint(240, -440);
		const _17 = circuit.createPoint(260, -420);
		const _18 = circuit.createPoint(280, -400);
		const _19 = circuit.createPoint(300, -380);
		const _1a = circuit.createPoint(320, -360);
		const _1b = circuit.createPoint(340, -340);
		const _1c = circuit.createPoint(360, -320);
		const _1d = circuit.createPoint(380, -300);
		const _1e = circuit.createPoint(400, -280);
		const _1f = circuit.createPoint(420, -260);
		const _20 = circuit.createPoint(440, -240);
		const _21 = circuit.createPoint(460, -220);
		const _22 = circuit.createPoint(480, -200);
		const _23 = circuit.createPoint(500, -180);
		const _24 = circuit.createPoint(520, -160);
		const _25 = circuit.createPoint(540, -140);
		const _26 = circuit.createPoint(560, -120);
		const _27 = circuit.createPoint(580, -100);
		const _28 = circuit.createPoint(600, -80);
		const _29 = circuit.createPoint(620, -60);
		const _2a = circuit.createPoint(640, -40);
		const _2b = circuit.createPoint(660, -20);
		const _2c = circuit.createPoint(60, 100);
		const _2d = circuit.createPoint(80, 200);
		const _2e = circuit.createPoint(100, 300);
		const _2f = circuit.createPoint(120, 400);
		const _30 = circuit.createPoint(140, 500);
		const _31 = circuit.createPoint(160, 600);
		const _32 = circuit.createPoint(180, 700);
		const _33 = circuit.createPoint(200, 800);
		const _34 = circuit.createPoint(220, 900);
		const _35 = circuit.createPoint(240, 1000);
		const _36 = circuit.createPoint(260, 1100);
		const _37 = circuit.createPoint(280, 1200);
		const _38 = circuit.createPoint(300, 1300);
		const _39 = circuit.createPoint(320, 1400);
		const _3a = circuit.createPoint(340, 1500);
		const _3b = circuit.createPoint(360, 1600);
		const _3c = circuit.createPoint(380, 1700);
		const _3d = circuit.createPoint(400, 1800);
		const _3e = circuit.createPoint(420, 1900);
		const _3f = circuit.createPoint(440, 2000);
		const _40 = circuit.createPoint(460, 2100);
		const _41 = circuit.createPoint(480, 2200);
		const _42 = circuit.createPoint(500, 2300);
		const _43 = circuit.createPoint(520, 2400);
		const _44 = circuit.createPoint(540, 2500);
		const _45 = circuit.createPoint(560, 2600);
		const _46 = circuit.createPoint(580, 2700);
		const _47 = circuit.createPoint(600, 2800);
		const _48 = circuit.createPoint(620, 2900);
		const _49 = circuit.createPoint(640, 3000);
		const _4a = circuit.createPoint(660, 3100);
		const _4b = circuit.createPoint(40, 0);
		const _4c = circuit.createPoint(-320, 120);
		const _4d = circuit.createPoint(-340, 220);
		const _4e = circuit.createPoint(-360, 320);
		const _4f = circuit.createPoint(-380, 420);
		const _50 = circuit.createPoint(-400, 520);
		const _51 = circuit.createPoint(-420, 620);
		const _52 = circuit.createPoint(-440, 720);
		const _53 = circuit.createPoint(-460, 820);
		const _54 = circuit.createPoint(-480, 920);
		const _55 = circuit.createPoint(-500, 1020);
		const _56 = circuit.createPoint(-520, 1120);
		const _57 = circuit.createPoint(-540, 1220);
		const _58 = circuit.createPoint(-560, 1320);
		const _59 = circuit.createPoint(-580, 1420);
		const _5a = circuit.createPoint(-600, 1520);
		const _5b = circuit.createPoint(-620, 1620);
		const _5c = circuit.createPoint(-640, 1720);
		const _5d = circuit.createPoint(-660, 1820);
		const _5e = circuit.createPoint(-680, 1920);
		const _5f = circuit.createPoint(-700, 2020);
		const _60 = circuit.createPoint(-720, 2120);
		const _61 = circuit.createPoint(-740, 2220);
		const _62 = circuit.createPoint(-760, 2320);
		const _63 = circuit.createPoint(-780, 2420);
		const _64 = circuit.createPoint(-800, 2520);
		const _65 = circuit.createPoint(-820, 2620);
		const _66 = circuit.createPoint(-840, 2720);
		const _67 = circuit.createPoint(-860, 2820);
		const _68 = circuit.createPoint(-880, 2920);
		const _69 = circuit.createPoint(-900, 3020);
		const _6a = circuit.createPoint(-920, 3120);
		const _6b = circuit.createPoint(-1060, 3000);
		const _6c = circuit.createPoint(-1080, 2900);
		const _6d = circuit.createPoint(-1100, 2800);
		const _6e = circuit.createPoint(-1120, 2700);
		const _6f = circuit.createPoint(-1140, 2600);
		const _70 = circuit.createPoint(-1160, 2500);
		const _71 = circuit.createPoint(-1180, 2400);
		const _72 = circuit.createPoint(-1200, 2300);
		const _73 = circuit.createPoint(-1220, 2200);
		const _74 = circuit.createPoint(-1240, 2100);
		const _75 = circuit.createPoint(-1260, 2000);
		const _76 = circuit.createPoint(-1280, 1900);
		const _77 = circuit.createPoint(-1300, 1800);
		const _78 = circuit.createPoint(-1320, 1700);
		const _79 = circuit.createPoint(-1340, 1600);
		const _7a = circuit.createPoint(-1360, 1500);
		const _7b = circuit.createPoint(-1380, 1400);
		const _7c = circuit.createPoint(-1400, 1300);
		const _7d = circuit.createPoint(-1420, 1200);
		const _7e = circuit.createPoint(-1440, 1100);
		const _7f = circuit.createPoint(-1460, 1000);
		const _80 = circuit.createPoint(-1480, 900);
		const _81 = circuit.createPoint(-1500, 800);
		const _82 = circuit.createPoint(-1520, 700);
		const _83 = circuit.createPoint(-1540, 600);
		const _84 = circuit.createPoint(-1560, 500);
		const _85 = circuit.createPoint(-1580, 400);
		const _86 = circuit.createPoint(-1600, 300);
		const _87 = circuit.createPoint(-1620, 200);
		const _88 = circuit.createPoint(-1640, 100);
		const _89 = circuit.createPoint(-1660, 0);
		const _8a = circuit.createPoint(-920, -20);
		const _8b = circuit.createPoint(-900, -40);
		const _8c = circuit.createPoint(-880, -60);
		const _8d = circuit.createPoint(-860, -80);
		const _8e = circuit.createPoint(-840, -100);
		const _8f = circuit.createPoint(-820, -120);
		const _90 = circuit.createPoint(-800, -140);
		const _91 = circuit.createPoint(-780, -160);
		const _92 = circuit.createPoint(-760, -180);
		const _93 = circuit.createPoint(-740, -200);
		const _94 = circuit.createPoint(-720, -220);
		const _95 = circuit.createPoint(-700, -240);
		const _96 = circuit.createPoint(-680, -260);
		const _97 = circuit.createPoint(-660, -280);
		const _98 = circuit.createPoint(-640, -300);
		const _99 = circuit.createPoint(-620, -320);
		const _9a = circuit.createPoint(-600, -340);
		const _9b = circuit.createPoint(-580, -360);
		const _9c = circuit.createPoint(-560, -380);
		const _9d = circuit.createPoint(-540, -400);
		const _9e = circuit.createPoint(-520, -420);
		const _9f = circuit.createPoint(-500, -440);
		const _a0 = circuit.createPoint(-480, -460);
		const _a1 = circuit.createPoint(-460, -480);
		const _a2 = circuit.createPoint(-440, -500);
		const _a3 = circuit.createPoint(-420, -520);
		const _a4 = circuit.createPoint(-400, -540);
		const _a5 = circuit.createPoint(-380, -560);
		const _a6 = circuit.createPoint(-360, -580);
		const _a7 = circuit.createPoint(-340, -600);
		const _a8 = circuit.createPoint(-320, -620);
		const _a9 = circuit.createPoint(-300, 20);
		const _aa = circuit.createPoint(-300, -640);
		const _ab = circuit.createPoint(-1660, 2480);
		const _ac = circuit.createPoint(-1640, 2500);
		const _ad = circuit.createPoint(-1620, 2520);
		const _ae = circuit.createPoint(-1600, 2540);
		const _af = circuit.createPoint(-1580, 2560);
		const _b0 = circuit.createPoint(-1560, 2580);
		const _b1 = circuit.createPoint(-1540, 2600);
		const _b2 = circuit.createPoint(-1520, 2620);
		const _b3 = circuit.createPoint(-1500, 2640);
		const _b4 = circuit.createPoint(-1480, 2660);
		const _b5 = circuit.createPoint(-1460, 2680);
		const _b6 = circuit.createPoint(-1440, 2700);
		const _b7 = circuit.createPoint(-1420, 2720);
		const _b8 = circuit.createPoint(-1400, 2740);
		const _b9 = circuit.createPoint(-1380, 2760);
		const _ba = circuit.createPoint(-1360, 2780);
		const _bb = circuit.createPoint(-1340, 2800);
		const _bc = circuit.createPoint(-1320, 2820);
		const _bd = circuit.createPoint(-1300, 2840);
		const _be = circuit.createPoint(-1280, 2860);
		const _bf = circuit.createPoint(-1260, 2880);
		const _c0 = circuit.createPoint(-1240, 2900);
		const _c1 = circuit.createPoint(-1220, 2920);
		const _c2 = circuit.createPoint(-1200, 2940);
		const _c3 = circuit.createPoint(-1180, 2960);
		const _c4 = circuit.createPoint(-1160, 2980);
		const _c5 = circuit.createPoint(-1140, 3000);
		const _c6 = circuit.createPoint(-1120, 3020);
		const _c7 = circuit.createPoint(-1100, 3040);
		const _c8 = circuit.createPoint(-1080, 3060);
		const _c9 = circuit.createPoint(-1060, 3080);
		const _ca = new Joinner(32);
		circuit.add(_ca);
		_ca.transform.set(1, 0, 0, 1, 760, -340);
		nonInput.push(_ca);
		const _cb = new BitAdder();
		circuit.add(_cb);
		_cb.transform.set(1, 0, 0, 1, 0, 0);
		inputLayer.push(_cb);
		const _cc = new BitAdder();
		circuit.add(_cc);
		_cc.transform.set(1, 0, 0, 1, 0, 100);
		nonInput.push(_cc);
		const _cd = new BitAdder();
		circuit.add(_cd);
		_cd.transform.set(1, 0, 0, 1, 0, 200);
		nonInput.push(_cd);
		const _ce = new BitAdder();
		circuit.add(_ce);
		_ce.transform.set(1, 0, 0, 1, 0, 300);
		nonInput.push(_ce);
		const _cf = new BitAdder();
		circuit.add(_cf);
		_cf.transform.set(1, 0, 0, 1, 0, 400);
		nonInput.push(_cf);
		const _d0 = new BitAdder();
		circuit.add(_d0);
		_d0.transform.set(1, 0, 0, 1, 0, 500);
		nonInput.push(_d0);
		const _d1 = new BitAdder();
		circuit.add(_d1);
		_d1.transform.set(1, 0, 0, 1, 0, 600);
		nonInput.push(_d1);
		const _d2 = new BitAdder();
		circuit.add(_d2);
		_d2.transform.set(1, 0, 0, 1, 0, 700);
		nonInput.push(_d2);
		const _d3 = new BitAdder();
		circuit.add(_d3);
		_d3.transform.set(1, 0, 0, 1, 0, 800);
		nonInput.push(_d3);
		const _d4 = new BitAdder();
		circuit.add(_d4);
		_d4.transform.set(1, 0, 0, 1, 0, 900);
		nonInput.push(_d4);
		const _d5 = new BitAdder();
		circuit.add(_d5);
		_d5.transform.set(1, 0, 0, 1, 0, 1000);
		nonInput.push(_d5);
		const _d6 = new BitAdder();
		circuit.add(_d6);
		_d6.transform.set(1, 0, 0, 1, 0, 1100);
		nonInput.push(_d6);
		const _d7 = new BitAdder();
		circuit.add(_d7);
		_d7.transform.set(1, 0, 0, 1, 0, 1200);
		nonInput.push(_d7);
		const _d8 = new BitAdder();
		circuit.add(_d8);
		_d8.transform.set(1, 0, 0, 1, 0, 1300);
		nonInput.push(_d8);
		const _d9 = new BitAdder();
		circuit.add(_d9);
		_d9.transform.set(1, 0, 0, 1, 0, 1400);
		nonInput.push(_d9);
		const _da = new BitAdder();
		circuit.add(_da);
		_da.transform.set(1, 0, 0, 1, 0, 1500);
		nonInput.push(_da);
		const _db = new BitAdder();
		circuit.add(_db);
		_db.transform.set(1, 0, 0, 1, 0, 1600);
		nonInput.push(_db);
		const _dc = new BitAdder();
		circuit.add(_dc);
		_dc.transform.set(1, 0, 0, 1, 0, 1700);
		nonInput.push(_dc);
		const _dd = new BitAdder();
		circuit.add(_dd);
		_dd.transform.set(1, 0, 0, 1, 0, 1800);
		nonInput.push(_dd);
		const _de = new BitAdder();
		circuit.add(_de);
		_de.transform.set(1, 0, 0, 1, 0, 2000);
		nonInput.push(_de);
		const _df = new BitAdder();
		circuit.add(_df);
		_df.transform.set(1, 0, 0, 1, 0, 2100);
		nonInput.push(_df);
		const _e0 = new BitAdder();
		circuit.add(_e0);
		_e0.transform.set(1, 0, 0, 1, 0, 2200);
		nonInput.push(_e0);
		const _e1 = new BitAdder();
		circuit.add(_e1);
		_e1.transform.set(1, 0, 0, 1, 0, 2300);
		nonInput.push(_e1);
		const _e2 = new BitAdder();
		circuit.add(_e2);
		_e2.transform.set(1, 0, 0, 1, 0, 2400);
		nonInput.push(_e2);
		const _e3 = new BitAdder();
		circuit.add(_e3);
		_e3.transform.set(1, 0, 0, 1, 0, 2500);
		nonInput.push(_e3);
		const _e4 = new BitAdder();
		circuit.add(_e4);
		_e4.transform.set(1, 0, 0, 1, 0, 2600);
		nonInput.push(_e4);
		const _e5 = new BitAdder();
		circuit.add(_e5);
		_e5.transform.set(1, 0, 0, 1, 0, 2700);
		nonInput.push(_e5);
		const _e6 = new BitAdder();
		circuit.add(_e6);
		_e6.transform.set(1, 0, 0, 1, 0, 2800);
		nonInput.push(_e6);
		const _e7 = new BitAdder();
		circuit.add(_e7);
		_e7.transform.set(1, 0, 0, 1, 0, 2900);
		nonInput.push(_e7);
		const _e8 = new BitAdder();
		circuit.add(_e8);
		_e8.transform.set(1, 0, 0, 1, 0, 3000);
		nonInput.push(_e8);
		const _e9 = new BitAdder();
		circuit.add(_e9);
		_e9.transform.set(1, 0, 0, 1, 0, 3100);
		nonInput.push(_e9);
		const _ea = new BitAdder();
		circuit.add(_ea);
		_ea.transform.set(1, 0, 0, 1, 0, 1900);
		nonInput.push(_ea);
		const _eb = new Splitter(32);
		circuit.add(_eb);
		_eb.transform.set(1, 0, 0, 1, -1760, -340);
		inputLayer.push(_eb);
		const _ec = new Splitter(32);
		circuit.add(_ec);
		_ec.transform.set(1, 0, 0, 1, -1760, 2780);
		inputLayer.push(_ec);
		circuit.createWire(_e9.outerPoints[2], _1);
		circuit.createWire(_cb.outerPoints[0], _2);
		circuit.createWire(_8, _3);
		circuit.createWire(_9, _4);
		circuit.createWire(_6, _5);
		circuit.createWire(_7, _6);
		circuit.createWire(_ca.outerPoints[0], _7);
		circuit.createWire(_a, _8);
		circuit.createWire(_b, _9);
		circuit.createWire(_ec.outerPoints[0], _a);
		circuit.createWire(_eb.outerPoints[0], _b);
		circuit.createWire(_c, _ca.outerPoints[32]);
		circuit.createWire(_d, _ca.outerPoints[31]);
		circuit.createWire(_e, _ca.outerPoints[30]);
		circuit.createWire(_f, _ca.outerPoints[29]);
		circuit.createWire(_10, _ca.outerPoints[28]);
		circuit.createWire(_11, _ca.outerPoints[27]);
		circuit.createWire(_12, _ca.outerPoints[26]);
		circuit.createWire(_13, _ca.outerPoints[25]);
		circuit.createWire(_14, _ca.outerPoints[24]);
		circuit.createWire(_15, _ca.outerPoints[23]);
		circuit.createWire(_16, _ca.outerPoints[22]);
		circuit.createWire(_17, _ca.outerPoints[21]);
		circuit.createWire(_18, _ca.outerPoints[20]);
		circuit.createWire(_19, _ca.outerPoints[19]);
		circuit.createWire(_1a, _ca.outerPoints[18]);
		circuit.createWire(_1b, _ca.outerPoints[17]);
		circuit.createWire(_1c, _ca.outerPoints[16]);
		circuit.createWire(_1d, _ca.outerPoints[15]);
		circuit.createWire(_1e, _ca.outerPoints[14]);
		circuit.createWire(_1f, _ca.outerPoints[13]);
		circuit.createWire(_20, _ca.outerPoints[12]);
		circuit.createWire(_21, _ca.outerPoints[11]);
		circuit.createWire(_22, _ca.outerPoints[10]);
		circuit.createWire(_23, _ca.outerPoints[9]);
		circuit.createWire(_24, _ca.outerPoints[8]);
		circuit.createWire(_25, _ca.outerPoints[7]);
		circuit.createWire(_26, _ca.outerPoints[6]);
		circuit.createWire(_27, _ca.outerPoints[5]);
		circuit.createWire(_28, _ca.outerPoints[4]);
		circuit.createWire(_29, _ca.outerPoints[3]);
		circuit.createWire(_2a, _ca.outerPoints[2]);
		circuit.createWire(_2b, _ca.outerPoints[1]);
		circuit.createWire(_4b, _c);
		circuit.createWire(_2c, _d);
		circuit.createWire(_2d, _e);
		circuit.createWire(_2e, _f);
		circuit.createWire(_2f, _10);
		circuit.createWire(_30, _11);
		circuit.createWire(_31, _12);
		circuit.createWire(_32, _13);
		circuit.createWire(_33, _14);
		circuit.createWire(_34, _15);
		circuit.createWire(_35, _16);
		circuit.createWire(_36, _17);
		circuit.createWire(_37, _18);
		circuit.createWire(_38, _19);
		circuit.createWire(_39, _1a);
		circuit.createWire(_3a, _1b);
		circuit.createWire(_3b, _1c);
		circuit.createWire(_3c, _1d);
		circuit.createWire(_3d, _1e);
		circuit.createWire(_3e, _1f);
		circuit.createWire(_3f, _20);
		circuit.createWire(_40, _21);
		circuit.createWire(_41, _22);
		circuit.createWire(_42, _23);
		circuit.createWire(_43, _24);
		circuit.createWire(_44, _25);
		circuit.createWire(_45, _26);
		circuit.createWire(_46, _27);
		circuit.createWire(_47, _28);
		circuit.createWire(_48, _29);
		circuit.createWire(_49, _2a);
		circuit.createWire(_4a, _2b);
		circuit.createWire(_e9.outerPoints[1], _4a);
		circuit.createWire(_e8.outerPoints[1], _49);
		circuit.createWire(_e7.outerPoints[1], _48);
		circuit.createWire(_e6.outerPoints[1], _47);
		circuit.createWire(_e5.outerPoints[1], _46);
		circuit.createWire(_e4.outerPoints[1], _45);
		circuit.createWire(_e3.outerPoints[1], _44);
		circuit.createWire(_e2.outerPoints[1], _43);
		circuit.createWire(_e1.outerPoints[1], _42);
		circuit.createWire(_e0.outerPoints[1], _41);
		circuit.createWire(_df.outerPoints[1], _40);
		circuit.createWire(_de.outerPoints[1], _3f);
		circuit.createWire(_ea.outerPoints[1], _3e);
		circuit.createWire(_dd.outerPoints[1], _3d);
		circuit.createWire(_dc.outerPoints[1], _3c);
		circuit.createWire(_db.outerPoints[1], _3b);
		circuit.createWire(_da.outerPoints[1], _3a);
		circuit.createWire(_d9.outerPoints[1], _39);
		circuit.createWire(_d8.outerPoints[1], _38);
		circuit.createWire(_d7.outerPoints[1], _37);
		circuit.createWire(_d6.outerPoints[1], _36);
		circuit.createWire(_d5.outerPoints[1], _35);
		circuit.createWire(_d4.outerPoints[1], _34);
		circuit.createWire(_d3.outerPoints[1], _33);
		circuit.createWire(_d2.outerPoints[1], _32);
		circuit.createWire(_d1.outerPoints[1], _31);
		circuit.createWire(_d0.outerPoints[1], _30);
		circuit.createWire(_cf.outerPoints[1], _2f);
		circuit.createWire(_ce.outerPoints[1], _2e);
		circuit.createWire(_cd.outerPoints[1], _2d);
		circuit.createWire(_cc.outerPoints[1], _2c);
		circuit.createWire(_cb.outerPoints[1], _4b);
		circuit.createWire(_cb.outerPoints[2], _cc.outerPoints[0]);
		circuit.createWire(_cc.outerPoints[2], _cd.outerPoints[0]);
		circuit.createWire(_cd.outerPoints[2], _ce.outerPoints[0]);
		circuit.createWire(_ce.outerPoints[2], _cf.outerPoints[0]);
		circuit.createWire(_cf.outerPoints[2], _d0.outerPoints[0]);
		circuit.createWire(_d0.outerPoints[2], _d1.outerPoints[0]);
		circuit.createWire(_d1.outerPoints[2], _d2.outerPoints[0]);
		circuit.createWire(_d2.outerPoints[2], _d3.outerPoints[0]);
		circuit.createWire(_d3.outerPoints[2], _d4.outerPoints[0]);
		circuit.createWire(_d4.outerPoints[2], _d5.outerPoints[0]);
		circuit.createWire(_d5.outerPoints[2], _d6.outerPoints[0]);
		circuit.createWire(_d6.outerPoints[2], _d7.outerPoints[0]);
		circuit.createWire(_d7.outerPoints[2], _d8.outerPoints[0]);
		circuit.createWire(_d8.outerPoints[2], _d9.outerPoints[0]);
		circuit.createWire(_d9.outerPoints[2], _da.outerPoints[0]);
		circuit.createWire(_da.outerPoints[2], _db.outerPoints[0]);
		circuit.createWire(_db.outerPoints[2], _dc.outerPoints[0]);
		circuit.createWire(_dc.outerPoints[2], _dd.outerPoints[0]);
		circuit.createWire(_de.outerPoints[2], _df.outerPoints[0]);
		circuit.createWire(_df.outerPoints[2], _e0.outerPoints[0]);
		circuit.createWire(_e0.outerPoints[2], _e1.outerPoints[0]);
		circuit.createWire(_e1.outerPoints[2], _e2.outerPoints[0]);
		circuit.createWire(_e2.outerPoints[2], _e3.outerPoints[0]);
		circuit.createWire(_e3.outerPoints[2], _e4.outerPoints[0]);
		circuit.createWire(_e4.outerPoints[2], _e5.outerPoints[0]);
		circuit.createWire(_e5.outerPoints[2], _e6.outerPoints[0]);
		circuit.createWire(_e6.outerPoints[2], _e7.outerPoints[0]);
		circuit.createWire(_e7.outerPoints[2], _e8.outerPoints[0]);
		circuit.createWire(_e8.outerPoints[2], _e9.outerPoints[0]);
		circuit.createWire(_dd.outerPoints[2], _ea.outerPoints[0]);
		circuit.createWire(_de.outerPoints[0], _ea.outerPoints[2]);
		circuit.createWire(_4c, _cc.outerPoints[4]);
		circuit.createWire(_4d, _cd.outerPoints[4]);
		circuit.createWire(_4e, _ce.outerPoints[4]);
		circuit.createWire(_4f, _cf.outerPoints[4]);
		circuit.createWire(_50, _d0.outerPoints[4]);
		circuit.createWire(_51, _d1.outerPoints[4]);
		circuit.createWire(_52, _d2.outerPoints[4]);
		circuit.createWire(_53, _d3.outerPoints[4]);
		circuit.createWire(_54, _d4.outerPoints[4]);
		circuit.createWire(_55, _d5.outerPoints[4]);
		circuit.createWire(_56, _d6.outerPoints[4]);
		circuit.createWire(_57, _d7.outerPoints[4]);
		circuit.createWire(_58, _d8.outerPoints[4]);
		circuit.createWire(_59, _d9.outerPoints[4]);
		circuit.createWire(_5a, _da.outerPoints[4]);
		circuit.createWire(_5b, _db.outerPoints[4]);
		circuit.createWire(_5c, _dc.outerPoints[4]);
		circuit.createWire(_5d, _dd.outerPoints[4]);
		circuit.createWire(_5f, _de.outerPoints[4]);
		circuit.createWire(_60, _df.outerPoints[4]);
		circuit.createWire(_61, _e0.outerPoints[4]);
		circuit.createWire(_62, _e1.outerPoints[4]);
		circuit.createWire(_63, _e2.outerPoints[4]);
		circuit.createWire(_64, _e3.outerPoints[4]);
		circuit.createWire(_65, _e4.outerPoints[4]);
		circuit.createWire(_66, _e5.outerPoints[4]);
		circuit.createWire(_67, _e6.outerPoints[4]);
		circuit.createWire(_68, _e7.outerPoints[4]);
		circuit.createWire(_69, _e8.outerPoints[4]);
		circuit.createWire(_6a, _e9.outerPoints[4]);
		circuit.createWire(_5e, _ea.outerPoints[4]);
		circuit.createWire(_89, _cb.outerPoints[3]);
		circuit.createWire(_88, _cc.outerPoints[3]);
		circuit.createWire(_87, _cd.outerPoints[3]);
		circuit.createWire(_86, _ce.outerPoints[3]);
		circuit.createWire(_85, _cf.outerPoints[3]);
		circuit.createWire(_84, _d0.outerPoints[3]);
		circuit.createWire(_83, _d1.outerPoints[3]);
		circuit.createWire(_82, _d2.outerPoints[3]);
		circuit.createWire(_81, _d3.outerPoints[3]);
		circuit.createWire(_80, _d4.outerPoints[3]);
		circuit.createWire(_7f, _d5.outerPoints[3]);
		circuit.createWire(_7e, _d6.outerPoints[3]);
		circuit.createWire(_7d, _d7.outerPoints[3]);
		circuit.createWire(_7c, _d8.outerPoints[3]);
		circuit.createWire(_7b, _d9.outerPoints[3]);
		circuit.createWire(_7a, _da.outerPoints[3]);
		circuit.createWire(_79, _db.outerPoints[3]);
		circuit.createWire(_78, _dc.outerPoints[3]);
		circuit.createWire(_77, _dd.outerPoints[3]);
		circuit.createWire(_75, _de.outerPoints[3]);
		circuit.createWire(_74, _df.outerPoints[3]);
		circuit.createWire(_73, _e0.outerPoints[3]);
		circuit.createWire(_72, _e1.outerPoints[3]);
		circuit.createWire(_71, _e2.outerPoints[3]);
		circuit.createWire(_70, _e3.outerPoints[3]);
		circuit.createWire(_6f, _e4.outerPoints[3]);
		circuit.createWire(_6e, _e5.outerPoints[3]);
		circuit.createWire(_6d, _e6.outerPoints[3]);
		circuit.createWire(_6c, _e7.outerPoints[3]);
		circuit.createWire(_6b, _e8.outerPoints[3]);
		circuit.createWire(_76, _ea.outerPoints[3]);
		circuit.createWire(_6a, _8a);
		circuit.createWire(_69, _8b);
		circuit.createWire(_68, _8c);
		circuit.createWire(_67, _8d);
		circuit.createWire(_66, _8e);
		circuit.createWire(_65, _8f);
		circuit.createWire(_64, _90);
		circuit.createWire(_63, _91);
		circuit.createWire(_62, _92);
		circuit.createWire(_61, _93);
		circuit.createWire(_60, _94);
		circuit.createWire(_5f, _95);
		circuit.createWire(_5e, _96);
		circuit.createWire(_5d, _97);
		circuit.createWire(_5c, _98);
		circuit.createWire(_5b, _99);
		circuit.createWire(_5a, _9a);
		circuit.createWire(_59, _9b);
		circuit.createWire(_58, _9c);
		circuit.createWire(_57, _9d);
		circuit.createWire(_56, _9e);
		circuit.createWire(_55, _9f);
		circuit.createWire(_54, _a0);
		circuit.createWire(_53, _a1);
		circuit.createWire(_52, _a2);
		circuit.createWire(_51, _a3);
		circuit.createWire(_50, _a4);
		circuit.createWire(_4f, _a5);
		circuit.createWire(_4e, _a6);
		circuit.createWire(_4d, _a7);
		circuit.createWire(_4c, _a8);
		circuit.createWire(_cb.outerPoints[4], _a9);
		circuit.createWire(_a9, _aa);
		circuit.createWire(_8a, _eb.outerPoints[1]);
		circuit.createWire(_8b, _eb.outerPoints[2]);
		circuit.createWire(_8c, _eb.outerPoints[3]);
		circuit.createWire(_8d, _eb.outerPoints[4]);
		circuit.createWire(_8e, _eb.outerPoints[5]);
		circuit.createWire(_8f, _eb.outerPoints[6]);
		circuit.createWire(_90, _eb.outerPoints[7]);
		circuit.createWire(_91, _eb.outerPoints[8]);
		circuit.createWire(_92, _eb.outerPoints[9]);
		circuit.createWire(_93, _eb.outerPoints[10]);
		circuit.createWire(_94, _eb.outerPoints[11]);
		circuit.createWire(_95, _eb.outerPoints[12]);
		circuit.createWire(_96, _eb.outerPoints[13]);
		circuit.createWire(_97, _eb.outerPoints[14]);
		circuit.createWire(_98, _eb.outerPoints[15]);
		circuit.createWire(_99, _eb.outerPoints[16]);
		circuit.createWire(_9a, _eb.outerPoints[17]);
		circuit.createWire(_9b, _eb.outerPoints[18]);
		circuit.createWire(_9c, _eb.outerPoints[19]);
		circuit.createWire(_9d, _eb.outerPoints[20]);
		circuit.createWire(_9e, _eb.outerPoints[21]);
		circuit.createWire(_9f, _eb.outerPoints[22]);
		circuit.createWire(_a0, _eb.outerPoints[23]);
		circuit.createWire(_a1, _eb.outerPoints[24]);
		circuit.createWire(_a2, _eb.outerPoints[25]);
		circuit.createWire(_a3, _eb.outerPoints[26]);
		circuit.createWire(_a4, _eb.outerPoints[27]);
		circuit.createWire(_a5, _eb.outerPoints[28]);
		circuit.createWire(_a6, _eb.outerPoints[29]);
		circuit.createWire(_a7, _eb.outerPoints[30]);
		circuit.createWire(_a8, _eb.outerPoints[31]);
		circuit.createWire(_aa, _eb.outerPoints[32]);
		circuit.createWire(_6b, _c9);
		circuit.createWire(_6c, _c8);
		circuit.createWire(_6d, _c7);
		circuit.createWire(_6e, _c6);
		circuit.createWire(_6f, _c5);
		circuit.createWire(_70, _c4);
		circuit.createWire(_71, _c3);
		circuit.createWire(_72, _c2);
		circuit.createWire(_73, _c1);
		circuit.createWire(_74, _c0);
		circuit.createWire(_75, _bf);
		circuit.createWire(_76, _be);
		circuit.createWire(_77, _bd);
		circuit.createWire(_78, _bc);
		circuit.createWire(_79, _bb);
		circuit.createWire(_7a, _ba);
		circuit.createWire(_7b, _b9);
		circuit.createWire(_7c, _b8);
		circuit.createWire(_7d, _b7);
		circuit.createWire(_7e, _b6);
		circuit.createWire(_7f, _b5);
		circuit.createWire(_80, _b4);
		circuit.createWire(_81, _b3);
		circuit.createWire(_82, _b2);
		circuit.createWire(_83, _b1);
		circuit.createWire(_84, _b0);
		circuit.createWire(_85, _af);
		circuit.createWire(_86, _ae);
		circuit.createWire(_87, _ad);
		circuit.createWire(_88, _ac);
		circuit.createWire(_89, _ab);
		circuit.createWire(_e9.outerPoints[3], _ec.outerPoints[1]);
		circuit.createWire(_c9, _ec.outerPoints[2]);
		circuit.createWire(_c8, _ec.outerPoints[3]);
		circuit.createWire(_c7, _ec.outerPoints[4]);
		circuit.createWire(_c6, _ec.outerPoints[5]);
		circuit.createWire(_c5, _ec.outerPoints[6]);
		circuit.createWire(_c4, _ec.outerPoints[7]);
		circuit.createWire(_c3, _ec.outerPoints[8]);
		circuit.createWire(_c2, _ec.outerPoints[9]);
		circuit.createWire(_c1, _ec.outerPoints[10]);
		circuit.createWire(_c0, _ec.outerPoints[11]);
		circuit.createWire(_bf, _ec.outerPoints[12]);
		circuit.createWire(_be, _ec.outerPoints[13]);
		circuit.createWire(_bd, _ec.outerPoints[14]);
		circuit.createWire(_bc, _ec.outerPoints[15]);
		circuit.createWire(_bb, _ec.outerPoints[16]);
		circuit.createWire(_ba, _ec.outerPoints[17]);
		circuit.createWire(_b9, _ec.outerPoints[18]);
		circuit.createWire(_b8, _ec.outerPoints[19]);
		circuit.createWire(_b7, _ec.outerPoints[20]);
		circuit.createWire(_b6, _ec.outerPoints[21]);
		circuit.createWire(_b5, _ec.outerPoints[22]);
		circuit.createWire(_b4, _ec.outerPoints[23]);
		circuit.createWire(_b3, _ec.outerPoints[24]);
		circuit.createWire(_b2, _ec.outerPoints[25]);
		circuit.createWire(_b1, _ec.outerPoints[26]);
		circuit.createWire(_b0, _ec.outerPoints[27]);
		circuit.createWire(_af, _ec.outerPoints[28]);
		circuit.createWire(_ae, _ec.outerPoints[29]);
		circuit.createWire(_ad, _ec.outerPoints[30]);
		circuit.createWire(_ac, _ec.outerPoints[31]);
		circuit.createWire(_ab, _ec.outerPoints[32]);
		const _ed = this.addIO(0, -20, 'input');
		circuit.createHiddenWire(_ed, _2)
		const _ee = this.addIO(20, 0, 'output');
		circuit.createHiddenWire(_ee, _5)
		const _ef = this.addIO(0, 40, 'output');
		circuit.createHiddenWire(_ef, _1)
		const _f0 = this.addIO(-20, 0, 'input');
		circuit.createHiddenWire(_f0, _4)
		const _f1 = this.addIO(-20, 20, 'input');
		circuit.createHiddenWire(_f1, _3)
		this.hitbox = [-14, -14, 14, 34];
	}
}
export class Latch extends ComposedComponent {
	constructor() {
		super();
		const circuit = new Circuit();
		const inputLayer = [];
		const nonInput = [];
		this.circuit = circuit;
		this.inputLayer = inputLayer;
		this.nonInput = nonInput;
		this.label = "latch";
		const _1 = circuit.createIOPoint('output', 120, 0);
		const _2 = circuit.createIOPoint('input', -120, -100);
		const _3 = circuit.createIOPoint('input', -120, 100);
		const _4 = circuit.createPoint(100, 0);
		const _5 = circuit.createPoint(100, 60);
		const _6 = circuit.createPoint(100, 80);
		const _7 = circuit.createPoint(100, -40);
		const _8 = circuit.createPoint(40, 40);
		const _9 = circuit.createPoint(40, -20);
		const _a = circuit.createPoint(-80, 100);
		const _b = circuit.createPoint(80, -20);
		const _c = circuit.createPoint(100, -60);
		const _d = circuit.createPoint(-20, -20);
		const _e = circuit.createPoint(-20, -40);
		const _f = circuit.createPoint(-20, 40);
		const _10 = circuit.createPoint(-20, 60);
		const _11 = circuit.createPoint(80, 40);
		const _12 = new BufferGate();
		circuit.add(_12);
		_12.transform.set(0, -1, 1, 0, -80, 60);
		inputLayer.push(_12);
		const _13 = new NotGate();
		circuit.add(_13);
		_13.transform.set(1, 0, 0, 1, -40, 100);
		inputLayer.push(_13);
		const _14 = new AndGate();
		circuit.add(_14);
		_14.transform.set(1, 0, 0, 1, -60, -80);
		inputLayer.push(_14);
		const _15 = new AndGate();
		circuit.add(_15);
		_15.transform.set(1, 0, 0, 1, 40, 80);
		nonInput.push(_15);
		const _16 = new OrGate();
		circuit.add(_16);
		_16.transform.set(1, 0, 0, 1, 20, -60);
		nonInput.push(_16);
		circuit.createWire(_b, _4);
		circuit.createWire(_1, _4);
		circuit.createWire(_5, _11);
		circuit.createWire(_6, _5);
		circuit.createWire(_6, _15.outerPoints[2]);
		circuit.createWire(_7, _b);
		circuit.createWire(_c, _7);
		circuit.createWire(_8, _11);
		circuit.createWire(_d, _8);
		circuit.createWire(_9, _b);
		circuit.createWire(_f, _9);
		circuit.createWire(_12.outerPoints[1], _14.outerPoints[1]);
		circuit.createWire(_12.outerPoints[0], _a);
		circuit.createWire(_13.outerPoints[1], _15.outerPoints[1]);
		circuit.createWire(_a, _13.outerPoints[0]);
		circuit.createWire(_3, _a);
		circuit.createWire(_14.outerPoints[0], _2);
		circuit.createWire(_14.outerPoints[2], _16.outerPoints[0]);
		circuit.createWire(_16.outerPoints[2], _c);
		circuit.createWire(_e, _d);
		circuit.createWire(_16.outerPoints[1], _e);
		circuit.createWire(_10, _f);
		circuit.createWire(_15.outerPoints[0], _10);
		const _17 = this.addIO(20, 0, 'output');
		circuit.createHiddenWire(_17, _1)
		const _18 = this.addIO(-20, -20, 'input');
		circuit.createHiddenWire(_18, _2)
		const _19 = this.addIO(-20, 0, 'input');
		circuit.createHiddenWire(_19, _3)
		this.hitbox = [-14, -34, 14, 34];
	}
}
export class FlipFlop extends ComposedComponent {
	constructor() {
		super();
		const circuit = new Circuit();
		const inputLayer = [];
		const nonInput = [];
		this.circuit = circuit;
		this.inputLayer = inputLayer;
		this.nonInput = nonInput;
		this.label = "flip-flop";
		const _1 = circuit.createIOPoint('input', -100, -20);
		_1.label = "in";
		_1.labelProp.align = "right";
		_1.labelProp.baseline = "bottom";
		_1.labelProp.dx = -0.25;
		_1.labelProp.dy = -0.25;
		const _2 = circuit.createIOPoint('input', -100, 20);
		_2.label = "clk";
		_2.labelProp.align = "right";
		_2.labelProp.baseline = "bottom";
		_2.labelProp.dx = -0.25;
		_2.labelProp.dy = -0.25;
		const _3 = circuit.createIOPoint('output', 100, 0);
		_3.label = "out";
		_3.labelProp.align = "left";
		_3.labelProp.baseline = "bottom";
		_3.labelProp.dx = 0.25;
		_3.labelProp.dy = -0.25;
		const _4 = circuit.createPoint(-80, 20);
		const _5 = circuit.createPoint(-80, 0);
		const _6 = circuit.createPoint(-80, 60);
		const _7 = circuit.createPoint(0, 0);
		const _8 = circuit.createPoint(0, -20);
		const _9 = circuit.createPoint(20, 60);
		const _a = circuit.createPoint(20, 0);
		const _b = new Latch();
		circuit.add(_b);
		_b.transform.set(1, 0, 0, 1, -40, 0);
		inputLayer.push(_b);
		const _c = new Latch();
		circuit.add(_c);
		_c.transform.set(1, 0, 0, 1, 60, 0);
		nonInput.push(_c);
		const _d = new NotGate();
		circuit.add(_d);
		_d.transform.set(1, 0, 0, 1, -20, 60);
		inputLayer.push(_d);
		circuit.createWire(_1, _b.outerPoints[1]);
		circuit.createWire(_2, _4);
		circuit.createWire(_4, _5);
		circuit.createWire(_5, _b.outerPoints[2]);
		circuit.createWire(_4, _6);
		circuit.createWire(_b.outerPoints[0], _7);
		circuit.createWire(_7, _8);
		circuit.createWire(_8, _c.outerPoints[1]);
		circuit.createWire(_6, _d.outerPoints[0]);
		circuit.createWire(_9, _d.outerPoints[1]);
		circuit.createWire(_9, _a);
		circuit.createWire(_a, _c.outerPoints[2]);
		circuit.createWire(_c.outerPoints[0], _3);
		const _e = this.addIO(20, 0, 'output');
		circuit.createHiddenWire(_e, _3)
		const _f = this.addIO(-20, 0, 'input');
		circuit.createHiddenWire(_f, _1)
		const _10 = this.addIO(-20, 20, 'input');
		circuit.createHiddenWire(_10, _2)
		this.hitbox = [-14, -14, 14, 34];
	}
}